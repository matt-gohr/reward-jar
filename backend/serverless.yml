service: reward-jar-api

frameworkVersion: '3'

provider:
  name: aws
  profile: personal-admin
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment:
    DYNAMODB_TABLE: ${self:service}-${self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
  
functions:
  api:
    handler: dist/handler.handler
    events:
      - http:
          path: /api/{proxy+}
          method: ANY
          cors: true
      - http:
          path: /api
          method: ANY
          cors: true

resources:
  Resources:
    RewardJarTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: type
            AttributeType: S
          - AttributeName: tokenId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: type-index
            KeySchema:
              - AttributeName: type
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: tokenId-index
            KeySchema:
              - AttributeName: tokenId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true

plugins:
  - serverless-offline
  - serverless-domain-manager

custom:
  # customDomain:
  #   domainName: api.mattgohr.com
  #   stage: ${self:provider.stage}
  #   certificateName: api.mattgohr.com
  #   certificateArn: arn:aws:acm:us-east-1:592057389220:certificate/847fd1b1-407d-4afb-b5a4-62d4c1a45e8c
  #   endpointType: 'regional'
  #   securityPolicy: tls_1_2
  #   autoDomain: true
  #   autoDomainWaitFor: true
  webpack:
    webpackConfig: 'webpack.config.cjs'
    includeModules: true
  serverless-offline:
    httpPort: 3001
    noPrependStageInUrl: true
    reloadHandler: true
    useChildProcesses: true 